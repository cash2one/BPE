#ifndef _SESSION_FSM_H_
#define _SESSION_FSM_H_
#include "SessionSoc.h"

typedef enum
{
	TEST_UNCONNECTED_STATE=0,
	TEST_PREPARE_STATE=1,
	TEST_WAITREPONSE_STATE=2,
	TEST_ALL_STATE
}ESessionState;
typedef enum
{
	TEST_CONNECT_EVENT,
	TEST_TIMEOUT_EVENT,
	TEST_RECEIVE_RESPONSE_EVENT,
	TEST_COMPLETED_TIMER0_EVENT,
	TEST_COMPLETED_TIMER_EVENT,
	TEST_DESTROY_EVENT
}ESessionEventType;
typedef struct stSessionResponse
{
	void *m_pBuffer;
	int m_nLen;
}SSessionResponse;
BEGIN_FSM_STATE_TABLE(CSessionSoc,SessionSocStateTable)

	BEGIN_STATE(TEST_UNCONNECTED_STATE,"SessionUnconnectedState",NULL,NULL,&CSessionSoc::DoDefault)
		STATE_EVENT_ITEM(NULL,TEST_CONNECT_EVENT,TEST_WAITREPONSE_STATE)
	END_STATE(TEST_UNCONNECTED_STATE)

	BEGIN_STATE(TEST_PREPARE_STATE,"SessionPrepareState",&CSessionSoc::DoStartTimer,&CSessionSoc::DoStopTimer,&CSessionSoc::DoDefault)
		STATE_EVENT_ITEM(NULL,TEST_TIMEOUT_EVENT,TEST_WAITREPONSE_STATE)
	END_STATE(TEST_PREPARE_STATE)

	BEGIN_STATE(TEST_WAITREPONSE_STATE,"SessionWaitResponseState",&CSessionSoc::DoSendRequest,NULL,&CSessionSoc::DoDefault)
		STATE_EVENT_ITEM_SELF(&CSessionSoc::DoSaveResponse,TEST_RECEIVE_RESPONSE_EVENT)
		STATE_EVENT_ITEM_SELF(&CSessionSoc::DoSendRequest,TEST_COMPLETED_TIMER0_EVENT)
		STATE_EVENT_ITEM(NULL,TEST_COMPLETED_TIMER_EVENT,TEST_PREPARE_STATE)
	END_STATE(TEST_WAITREPONSE_STATE)
END_FSM_STATE_TABLE(SessionSocStateTable)

#endif
